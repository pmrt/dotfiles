local p = {
  -- base = "#191724",
  -- highlight_low = "#2a283e",
  -- highlight_med = "#44415a",
	-- highlight_high = "#56526e",
  base = "#000000",
	surface = "#1f1f1f",
	overlay = "#403d52",
	muted = "#6e6a86",
	subtle = "#908caa",
	text = "#e0def4",
	love = "#eb6f92",
	gold = "#ebbcba",
	rose = "#93c6cf",
	pine = "#c4a7e7",
	foam = "#eb6f92",
	iris = "#c4a7e7",
  highlight_low = "#171717",
  highlight_med = "#363636",
  highlight_high = "#5e5e5e",
	none = "NONE",
	opacity = 0.1,
}

local groups = {
	background = p.base,
	panel = p.surface,
	border = p.highlight_med,
	comment = p.muted,
	link = p.iris,
	punctuation = p.muted,

	error = p.love,
	hint = p.iris,
	info = p.foam,
	warn = p.gold,

	git_add = p.rose,
	git_change = p.gold,
	git_delete = p.love,
	git_dirty = p.rose,
	git_ignore = p.muted,
	git_merge = p.iris,
	git_rename = p.pine,
	git_stage = p.iris,
	git_text = p.rose,

	headings = {
		h1 = p.iris,
		h2 = p.foam,
		h3 = p.rose,
		h4 = p.gold,
		h5 = p.pine,
		h6 = p.foam,
	},
}

local styles = {
	italic = false,
	vert_split = false,
	background = groups.background,
	float_background = groups.panel,
}

return {
	ColorColumn = { bg = p.highlight_high },
	Conceal = { bg = p.none },
	CurSearch = { link = "IncSearch" },
	-- Cursor = {},
	CursorColumn = { bg = p.highlight_low },
	-- CursorIM = {},
	CursorLine = { bg = p.highlight_low },
	CursorLineNr = { fg = p.muted },
	DarkenedPanel = { bg = groups.panel },
	DarkenedStatusline = { bg = groups.panel },
	DiffAdd = { fg = groups.background, bg = groups.git_add },
	DiffChange = { bg = p.overlay },
	DiffDelete = { bg = groups.git_delete },
	DiffText = { fg = groups.background, bg = groups.git_text },
	diffAdded = { link = "DiffAdd" },
	diffChanged = { link = "DiffChange" },
	diffRemoved = { link = "DiffDelete" },
	Directory = { fg = p.foam, bg = p.none },
	-- EndOfBuffer = {},
	ErrorMsg = { fg = p.love, bold = true },
	FloatBorder = { fg = groups.border, bg = styles.float_background },
	FloatTitle = { fg = p.muted },
	FoldColumn = { fg = p.muted },
	Folded = { fg = p.text, bg = groups.panel },
	IncSearch = { fg = p.base, bg = p.rose },
	LineNr = { fg = p.overlay },
	MatchParen = { fg = p.text, bg = p.highlight_med },
	ModeMsg = { fg = p.subtle },
	MoreMsg = { fg = p.iris },
	NonText = { fg = p.muted },
	Normal = { fg = p.text, bg = styles.background },
	NormalFloat = { fg = p.text, bg = styles.float_background },
	NormalNC = { fg = p.text, bg = styles.nc_background },
	NvimInternalError = { fg = "#ffffff", bg = p.love },
	Pmenu = { fg = p.subtle, bg = styles.float_background },
	PmenuSbar = { bg = p.highlight_low },
	PmenuSel = { fg = p.text, bg = p.overlay },
	PmenuThumb = { bg = p.highlight_med },
	Question = { fg = p.gold },
	-- QuickFixLine = {},
	-- RedrawDebugNormal = {}
	RedrawDebugClear = { fg = "#ffffff", bg = p.gold },
	RedrawDebugComposed = { fg = "#ffffff", bg = p.pine },
	RedrawDebugRecompose = { fg = "#ffffff", bg = p.love },
	Search = { bg = p.highlight_med },
	SpecialKey = { fg = p.foam },
	SpellBad = { sp = p.love, undercurl = true },
	SpellCap = { sp = p.subtle, undercurl = true },
	SpellLocal = { sp = p.subtle, undercurl = true },
	SpellRare = { sp = p.subtle, undercurl = true },
	SignColumn = { fg = p.text, bg = styles.background },
	StatusLine = { fg = p.subtle, bg = styles.float_background },
	StatusLineNC = { fg = p.muted, bg = styles.background },
	StatusLineTerm = { link = "StatusLine" },
	StatusLineTermNC = { link = "StatusLineNC" },
	TabLine = { fg = p.subtle, bg = styles.float_background },
	TabLineFill = { bg = styles.float_background },
	TabLineSel = { fg = p.text, bg = p.overlay },
	Title = { fg = p.text },
	VertSplit = { fg = p.highlight_low, bg = styles.vert_split },
	Visual = { bg = p.highlight_med },
	-- VisualNOS = {},
	WarningMsg = { fg = p.gold },
	-- Whitespace = {},
	-- WildMenu = {},

	Boolean = { fg = p.rose },
	Character = { fg = p.gold },
	Comment = { fg = groups.comment, italic = styles.italic },
	Conditional = { fg = p.pine },
	Constant = { fg = p.gold },
	Debug = { fg = p.rose },
	Define = { fg = p.iris },
	Delimiter = { fg = p.subtle },
	Error = { fg = p.love },
	Exception = { fg = p.pine },
	Float = { fg = p.gold },
	Function = { fg = p.rose },
	Identifier = { fg = p.rose },
	-- Ignore = {},
	Include = { fg = p.iris },
	Keyword = { fg = p.pine },
	Label = { fg = p.text },
	Macro = { fg = p.iris },
	Number = { fg = p.gold },
	Operator = { fg = p.subtle },
	PreCondit = { fg = p.iris },
	PreProc = { fg = p.iris },
	Repeat = { fg = p.pine },
	Special = { fg = p.rose },
	SpecialChar = { fg = p.rose },
	SpecialComment = { fg = p.iris },
	Statement = { fg = p.pine },
	StorageClass = { fg = p.foam },
	String = { fg = p.gold },
	Structure = { fg = p.foam },
	Tag = { fg = p.rose },
	Todo = { fg = p.iris },
	Type = { fg = p.gold },
	Typedef = { fg = p.foam },
	Underlined = { underline = true },

	htmlArg = { fg = p.iris },
	htmlBold = { bold = true },
	htmlEndTag = { fg = p.subtle },
	htmlH1 = { fg = groups.headings.h1, bold = true },
	htmlH2 = { fg = groups.headings.h2, bold = true },
	htmlH3 = { fg = groups.headings.h3, bold = true },
	htmlH4 = { fg = groups.headings.h4, bold = true },
	htmlH5 = { fg = groups.headings.h5, bold = true },
	htmlItalic = { italic = styles.italic },
	htmlLink = { fg = groups.link },
	htmlTag = { fg = p.subtle },
	htmlTagN = { fg = p.text },
	htmlTagName = { fg = p.foam },

	markdownDelimiter = { fg = p.subtle },
	markdownH1 = { fg = groups.headings.h1, bold = true },
	markdownH1Delimiter = { link = "markdownH1" },
	markdownH2 = { fg = groups.headings.h2, bold = true },
	markdownH2Delimiter = { link = "markdownH2" },
	markdownH3 = { fg = groups.headings.h3, bold = true },
	markdownH3Delimiter = { link = "markdownH3" },
	markdownH4 = { fg = groups.headings.h4, bold = true },
	markdownH4Delimiter = { link = "markdownH4" },
	markdownH5 = { fg = groups.headings.h5, bold = true },
	markdownH5Delimiter = { link = "markdownH5" },
	markdownH6 = { fg = groups.headings.h6, bold = true },
	markdownH6Delimiter = { link = "markdownH6" },
	markdownLinkText = { fg = groups.link, underline = true },
	markdownUrl = { link = "markdownLinkText" },

	mkdCode = { fg = p.foam, italic = styles.italic },
	mkdCodeDelimiter = { fg = p.rose },
	mkdCodeEnd = { fg = p.foam },
	mkdCodeStart = { fg = p.foam },
	mkdFootnotes = { fg = p.foam },
	mkdID = { fg = p.foam, underline = true },
	mkdInlineURL = { fg = groups.link, underline = true },
	mkdLink = { link = "mkdInlineURL" },
	mkdLinkDef = { link = "mkdInlineURL" },
	mkdListItemLine = { fg = p.text },
	mkdRule = { fg = p.subtle },
	mkdURL = { link = "mkdInlineURL" },

	DiagnosticError = { fg = groups.error },
	DiagnosticHint = { fg = groups.hint },
	DiagnosticInfo = { fg = groups.info },
	DiagnosticWarn = { fg = groups.warn },
	DiagnosticDefaultError = { fg = groups.error },
	DiagnosticDefaultHint = { fg = groups.hint },
	DiagnosticDefaultInfo = { fg = groups.info },
	DiagnosticDefaultWarn = { fg = groups.warn },
	DiagnosticFloatingError = { fg = groups.error },
	DiagnosticFloatingHint = { fg = groups.hint },
	DiagnosticFloatingInfo = { fg = groups.info },
	DiagnosticFloatingWarn = { fg = groups.warn },
	DiagnosticSignError = { fg = groups.error },
	DiagnosticSignHint = { fg = groups.hint },
	DiagnosticSignInfo = { fg = groups.info },
	DiagnosticSignWarn = { fg = groups.warn },
	DiagnosticStatusLineError = { fg = groups.error, bg = groups.panel },
	DiagnosticStatusLineHint = { fg = groups.hint, bg = groups.panel },
	DiagnosticStatusLineInfo = { fg = groups.info, bg = groups.panel },
	DiagnosticStatusLineWarn = { fg = groups.warn, bg = groups.panel },
	DiagnosticUnderlineError = { sp = groups.error, undercurl = true },
	DiagnosticUnderlineHint = { sp = groups.hint, undercurl = true },
	DiagnosticUnderlineInfo = { sp = groups.info, undercurl = true },
	DiagnosticUnderlineWarn = { sp = groups.warn, undercurl = true },
	DiagnosticVirtualTextError = { fg = groups.error },
	DiagnosticVirtualTextHint = { fg = groups.hint },
	DiagnosticVirtualTextInfo = { fg = groups.info },
	DiagnosticVirtualTextWarn = { fg = groups.warn },

	-- TSAttribute = {},
	TSBoolean = { link = "Boolean" },
	TSCharacter = { link = "Character" },
	TSComment = { link = "Comment" },
	TSConditional = { link = "Conditional" },
	TSConstBuiltin = { fg = p.love },
	-- TSConstMacro = {},
	TSConstant = { fg = p.text },
	TSConstructor = { fg = p.text },
	-- TSEmphasis = {},
	-- TSError = {},
	-- TSException = {},
	TSField = { fg = p.text },
	-- TSFloat = {},
	TSFuncBuiltin = { fg = p.love },
	-- TSFuncMacro = {},
	TSFunction = { fg = p.rose },
	TSInclude = { fg = p.pine },
	TSKeyword = { fg = p.pine },
	-- TSKeywordFunction = {},
	TSKeywordOperator = { fg = p.subtle },
	TSLabel = { fg = p.text },
	-- TSLiteral = {},
	-- TSMethod = {},
	-- TSNamespace = {},
	-- TSNone = {},
	TSNumber = { link = "Number" },
	TSOperator = { fg = p.subtle },
	TSParameter = { fg = p.iris, italic = styles.italic },
	-- TSParameterReference = {},
	TSProperty = { fg = p.iris, italic = styles.italic },
	TSPunctBracket = { fg = groups.punctuation },
	TSPunctDelimiter = { fg = groups.punctuation },
	TSPunctSpecial = { fg = groups.punctuation },
	-- TSRepeat = {},
	-- TSStrike = {},
	TSString = { link = "String" },
	TSStringEscape = { fg = p.pine },
	-- TSStringRegex = {},
	TSStringSpecial = { link = "TSString" },
	-- TSSymbol = {},
	TSTag = { fg = p.text },
	TSTagDelimiter = { fg = p.subtle },
	TSText = { fg = p.text },
	TSTitle = { fg = groups.headings.h1, bold = true },
	TSType = { link = "Type" },
	-- TSTypeBuiltin = {},
	TSURI = { fg = groups.link },
	-- TSUnderline = {},
	TSVariable = { fg = p.text, italic = styles.italic },
	TSVariableBuiltin = { fg = p.love },

	-- vim.lsp.buf.document_highlight()
	LspReferenceText = { bg = p.highlight_med },
	LspReferenceRead = { bg = p.highlight_med },
	LspReferenceWrite = { bg = p.highlight_med },

	-- lsp-highlight-codelens
	LspCodeLens = { fg = p.subtle }, -- virtual text of code lens
	LspCodeLensSeparator = { fg = p.highlight_high }, -- separator between two or more code lens

	-- romgrk/barbar.nvim
	BufferCurrent = { fg = p.text, bg = p.overlay },
	BufferCurrentIndex = { fg = p.text, bg = p.overlay },
	BufferCurrentMod = { fg = p.foam, bg = p.overlay },
	BufferCurrentSign = { fg = p.subtle, bg = p.overlay },
	BufferCurrentTarget = { fg = p.gold, bg = p.overlay },
	BufferInactive = { fg = p.subtle },
	BufferInactiveIndex = { fg = p.subtle },
	BufferInactiveMod = { fg = p.foam },
	BufferInactiveSign = { fg = p.muted },
	BufferInactiveTarget = { fg = p.gold },
	BufferTabpageFill = { fg = groups.background, bg = groups.background },
	BufferVisible = { fg = p.subtle },
	BufferVisibleIndex = { fg = p.subtle },
	BufferVisibleMod = { fg = p.foam },
	BufferVisibleSign = { fg = p.muted },
	BufferVisibleTarget = { fg = p.gold },

	-- lewis6991/gitsigns.nvim
	GitSignsAdd = { fg = groups.git_add, bg = groups.background },
	GitSignsChange = { fg = groups.git_change, bg = groups.background },
	GitSignsDelete = { fg = groups.git_delete, bg = groups.background },
	SignAdd = { link = "GitSignsAdd" },
	SignChange = { link = "GitSignsChange" },
	SignDelete = { link = "GitSignsDelete" },

	-- mvllow/modes.nvim
	ModesCopy = { bg = p.gold },
	ModesDelete = { bg = p.love },
	ModesInsert = { bg = p.foam },
	ModesVisual = { bg = p.iris },

	-- kyazdani42/nvim-tree.lua
	NvimTreeEmptyFolderName = { fg = p.muted },
	NvimTreeFileDeleted = { fg = p.love },
	NvimTreeFileDirty = { fg = p.rose },
	NvimTreeFileMerge = { fg = p.iris },
	NvimTreeFileNew = { fg = p.foam },
	NvimTreeFileRenamed = { fg = p.pine },
	NvimTreeFileStaged = { fg = p.iris },
	NvimTreeFolderIcon = { fg = p.subtle },
	NvimTreeFolderName = { fg = p.iris },
	NvimTreeGitDeleted = { fg = groups.git_delete },
	NvimTreeGitDirty = { fg = groups.git_dirty },
	NvimTreeGitIgnored = { fg = groups.git_ignore },
	NvimTreeGitMerge = { fg = groups.git_merge },
	NvimTreeGitNew = { fg = groups.git_add },
	NvimTreeGitRenamed = { fg = groups.git_rename },
	NvimTreeGitStaged = { fg = groups.git_stage },
	NvimTreeImageFile = { fg = p.text },
	NvimTreeNormal = { fg = p.text },
	NvimTreeOpenedFile = { fg = p.text, bg = p.highlight_med },
	NvimTreeOpenedFolderName = { fg = p.iris },
	NvimTreeRootFolder = { fg = p.iris },
	NvimTreeSpecialFile = { link = "NvimTreeNormal" },
	NvimTreeWindowPicker = { fg = groups.background, bg = p.iris },

	-- folke/which-key.nvim
	WhichKey = { fg = p.iris },
	WhichKeyGroup = { fg = p.foam },
	WhichKeySeparator = { fg = p.subtle },
	WhichKeyDesc = { fg = p.gold },
	WhichKeyFloat = { bg = groups.panel },
	WhichKeyValue = { fg = p.rose },

	-- luka-reineke/indent-blankline.nvim
  IblIndent = { fg = p.highlight_low },
  MiniIndentscopeSymbol = { fg = p.overlay },


	-- hrsh7th/nvim-cmp
	CmpItemAbbr = { fg = p.subtle },
	CmpItemAbbrDeprecated = { fg = p.subtle, strikethrough = true },
	CmpItemAbbrMatch = { fg = p.text, bold = true },
	CmpItemAbbrMatchFuzzy = { fg = p.text, bold = true },
	CmpItemKind = { fg = p.iris },
	CmpItemKindClass = { fg = p.gold },
	CmpItemKindFunction = { fg = p.iris },
	CmpItemKindInterface = { fg = p.gold },
	CmpItemKindMethod = { fg = p.iris },
	CmpItemKindSnippet = { fg = p.iris },
	CmpItemKindVariable = { fg = p.foam },

	-- TimUntersberger/neogit
	NeogitDiffAddHighlight = { fg = p.foam, bg = p.highlight_med },
	NeogitDiffContextHighlight = { bg = p.highlight_low },
	NeogitDiffDeleteHighlight = { fg = p.love, bg = p.highlight_med },
	NeogitHunkHeader = { bg = p.highlight_low },
	NeogitHunkHeaderHighlight = { bg = p.highlight_low },

	-- vimwiki/vimwiki
	VimwikiHR = { fg = p.subtle },
	VimwikiHeader1 = { fg = groups.headings.h1, bold = true },
	VimwikiHeader2 = { fg = groups.headings.h2, bold = true },
	VimwikiHeader3 = { fg = groups.headings.h3, bold = true },
	VimwikiHeader4 = { fg = groups.headings.h4, bold = true },
	VimwikiHeader5 = { fg = groups.headings.h5, bold = true },
	VimwikiHeader6 = { fg = groups.headings.h6, bold = true },
	VimwikiHeaderChar = { fg = p.pine },
	VimwikiLink = { fg = groups.link, underline = true },
	VimwikiList = { fg = p.iris },
	VimwikiNoExistsLink = { fg = p.love },

	-- nvim-neorg/neorg
	NeorgHeading1Prefix = { fg = groups.headings.h1, bold = true },
	NeorgHeading1Title = { link = "NeorgHeading1Prefix" },
	NeorgHeading2Prefix = { fg = groups.headings.h2, bold = true },
	NeorgHeading2Title = { link = "NeorgHeading2Prefix" },
	NeorgHeading3Prefix = { fg = groups.headings.h3, bold = true },
	NeorgHeading3Title = { link = "NeorgHeading3Prefix" },
	NeorgHeading4Prefix = { fg = groups.headings.h4, bold = true },
	NeorgHeading4Title = { link = "NeorgHeading4Prefix" },
	NeorgHeading5Prefix = { fg = groups.headings.h5, bold = true },
	NeorgHeading5Title = { link = "NeorgHeading5Prefix" },
	NeorgHeading6Prefix = { fg = groups.headings.h6, bold = true },
	NeorgHeading6Title = { link = "NeorgHeading6Prefix" },
	NeorgMarkerTitle = { fg = p.text, bold = true },

	-- tami5/lspsaga.nvim (fork of glepnir/lspsaga.nvim)
	DefinitionCount = { fg = p.rose },
	DefinitionIcon = { fg = p.rose },
	DefintionPreviewTitle = { fg = p.rose, bold = true },
	LspFloatWinBorder = { fg = groups.border },
	LspFloatWinNormal = { bg = groups.background },
	LspSagaAutoPreview = { fg = p.subtle },
	LspSagaCodeActionBorder = { fg = groups.border },
	LspSagaCodeActionContent = { fg = p.foam },
	LspSagaCodeActionTitle = { fg = p.gold, bold = true },
	LspSagaCodeActionTruncateLine = { link = "LspSagaCodeActionBorder" },
	LspSagaDefPreviewBorder = { fg = groups.border },
	LspSagaDiagnosticBorder = { fg = groups.border },
	LspSagaDiagnosticHeader = { fg = p.gold, bold = true },
	LspSagaDiagnosticTruncateLine = { link = "LspSagaDiagnosticBorder" },
	LspSagaDocTruncateLine = { link = "LspSagaHoverBorder" },
	LspSagaFinderSelection = { fg = p.gold },
	LspSagaHoverBorder = { fg = groups.border },
	LspSagaLspFinderBorder = { fg = groups.border },
	LspSagaRenameBorder = { fg = p.pine },
	LspSagaRenamePromptPrefix = { fg = p.love },
	LspSagaShTruncateLine = { link = "LspSagaSignatureHelpBorder" },
	LspSagaSignatureHelpBorder = { fg = p.pine },
	ReferencesCount = { fg = p.rose },
	ReferencesIcon = { fg = p.rose },
	SagaShadow = { bg = p.overlay },
	TargetWord = { fg = p.iris },

	-- ray-x/lsp_signature.nvim
	LspSignatureActiveParameter = { bg = p.overlay },

	-- rlane/pounce.nvim
	PounceAccept = { fg = p.love, bg = p.highlight_high },
	PounceAcceptBest = { fg = p.base, bg = p.gold },
	PounceGap = { link = "Search" },
	PounceMatch = { link = "Search" },

	-- nvim-telescope/telescope.nvim
	TelescopeBorder = { fg = groups.border, bg = p.highlight_low },
	TelescopeMatching = { fg = p.rose },
	TelescopeNormal = { fg = p.subtle, bg = p.highlight_low },
	TelescopePromptNormal = { fg = p.text, bg = p.highlight_low },
	TelescopePromptPrefix = { fg = p.subtle },
	TelescopeSelection = { fg = p.text, bg = p.overlay },
	TelescopeSelectionCaret = { fg = p.rose, bg = p.overlay },
	TelescopeTitle = { fg = p.subtle },

	-- rcarriga/nvim-notify
	NotifyINFOBorder = { fg = p.foam },
	NotifyINFOTitle = { link = "NotifyINFOBorder" },
	NotifyINFOIcon = { link = "NotifyINFOBorder" },
	NotifyWARNBorder = { fg = p.gold },
	NotifyWARNTitle = { link = "NotifyWARNBorder" },
	NotifyWARNIcon = { link = "NotifyWARNBorder" },
	NotifyDEBUGBorder = { fg = p.muted },
	NotifyDEBUGTitle = { link = "NotifyDEBUGBorder" },
	NotifyDEBUGIcon = { link = "NotifyDEBUGBorder" },
	NotifyTRACEBorder = { fg = p.iris },
	NotifyTRACETitle = { link = "NotifyTRACEBorder" },
	NotifyTRACEIcon = { link = "NotifyTRACEBorder" },
	NotifyERRORBorder = { fg = p.love },
	NotifyERRORTitle = { link = "NotifyERRORBorder" },
	NotifyERRORIcon = { link = "NotifyERRORBorder" },
}
